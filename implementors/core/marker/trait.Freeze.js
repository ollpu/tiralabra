(function() {var implementors = {};
implementors["tiralabra"] = [{"text":"impl&lt;Num&gt; Freeze for <a class=\"struct\" href=\"tiralabra/struct.DisplayBuffer.html\" title=\"struct tiralabra::DisplayBuffer\">DisplayBuffer</a>&lt;Num&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Num: Freeze,&nbsp;</span>","synthetic":true,"types":["tiralabra::display::DisplayBuffer"]},{"text":"impl&lt;Num&gt; Freeze for <a class=\"struct\" href=\"tiralabra/struct.CorrelationMatch.html\" title=\"struct tiralabra::CorrelationMatch\">CorrelationMatch</a>&lt;Num&gt;","synthetic":true,"types":["tiralabra::correlation_match::CorrelationMatch"]},{"text":"impl&lt;Num&gt; Freeze for <a class=\"struct\" href=\"tiralabra/struct.CrossCorrelation.html\" title=\"struct tiralabra::CrossCorrelation\">CrossCorrelation</a>&lt;Num&gt;","synthetic":true,"types":["tiralabra::cross_correlation::CrossCorrelation"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tiralabra/ring_buffer/struct.Producer.html\" title=\"struct tiralabra::ring_buffer::Producer\">Producer</a>&lt;T&gt;","synthetic":true,"types":["tiralabra::ring_buffer::Producer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"tiralabra/ring_buffer/struct.Consumer.html\" title=\"struct tiralabra::ring_buffer::Consumer\">Consumer</a>&lt;T&gt;","synthetic":true,"types":["tiralabra::ring_buffer::Consumer"]},{"text":"impl&lt;T, I, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.56.1/std/primitive.usize.html\">usize</a>&gt; Freeze for <a class=\"struct\" href=\"tiralabra/util/struct.IterWindows.html\" title=\"struct tiralabra::util::IterWindows\">IterWindows</a>&lt;T, I, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["tiralabra::util::IterWindows"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()