var searchIndex = JSON.parse('{\
"tiralabra":{"doc":"","i":[[0,"correlation_match","tiralabra","Finds the closest match of a shorter piece of audio from …",null,null],[3,"CorrelationMatch","tiralabra::correlation_match","A structure prepared to perform correlation matches up to …",null,null],[12,"max_size","","",0,null],[12,"cross_correlation","","",0,null],[12,"f_buffer","","",0,null],[12,"g_buffer","","",0,null],[12,"result_buffer","","",0,null],[11,"new","","Allocate and prepare a correlation match algorithm. …",0,[[["usize",15]]]],[11,"compute","","Compute how much <code>b</code> should be shifted (to the right) to …",0,[[],["f32",15]]],[0,"cross_correlation","tiralabra","Computes cross correlation efficiently, using FFT.",null,null],[3,"CrossCorrelation","tiralabra::cross_correlation","A structure prepared to perform cross correlations up to …",null,null],[12,"base_size","","",1,null],[12,"fft_size","","",1,null],[12,"fft","","",1,null],[12,"buffer","","",1,null],[11,"new","","Allocate and prepare a cross correlation. <code>max_size</code> is the …",1,[[["usize",15]]]],[11,"compute","","Compute cross correlation including partially overlapping …",1,[[]]],[11,"compute_truncated","","Compute cross correlation excluding partially overlapping …",1,[[]]],[11,"compute_raw","","Performs the computation without extracting results from …",1,[[]]],[0,"fft","tiralabra","Implements the FFT, i.e. Fast Fourier Transform, and its …",null,null],[3,"Prepared","tiralabra::fft","A structure that is initialized beforehand, and contains …",null,null],[12,"size","","",2,null],[12,"twiddle_factors","","",2,null],[11,"new","","Prepare FFT. Size has to be a power of two.",2,[[["usize",15]]]],[11,"fft","","Perform the transform. The size of the array has to be …",2,[[]]],[11,"ifft","","Perform the inverse transform. The size of the array has …",2,[[]]],[0,"math","tiralabra","Defines mathematical structures and operations, primarily …",null,null],[6,"Num","tiralabra::math","The primary type of real numbers. This may be switched to …",null,null],[17,"PI","","The pi constant. If necessary, can be defined by hand …",null,null],[17,"IMAG_UNIT","","The imaginary unit \\\"i\\\".",null,null],[3,"Complex","","A complex number.",null,null],[12,"real","","",3,null],[12,"imag","","",3,null],[11,"conj","","The complex conjugate.",3,[[]]],[11,"abs2","","Square of the absolute value.",3,[[],["num",6]]],[11,"abs","","Absolute value.",3,[[],["num",6]]],[11,"euler","","Euler\'s formula, <code>e^(ix) = cos x + i sin x</code>.",3,[[["num",6]]]],[0,"ring_buffer","tiralabra","Ring buffer for transferring audio data between threads …",null,null],[8,"Item","tiralabra::ring_buffer","Defines the interface that an item stored in the queue …",null,null],[3,"RingBuffer","","",null,null],[12,"capacity","","",4,null],[12,"buffer","","",4,null],[12,"read_index","","",4,null],[12,"write_index","","",4,null],[3,"Producer","","The Producer party of a ring buffer. Can only push data …",null,null],[12,"internal","","",5,null],[3,"Consumer","","The Consumer party of a ring buffer. Can only pop data …",null,null],[12,"internal","","",6,null],[3,"RingRange","","",null,null],[12,"start","","",7,null],[12,"open_end","","",7,null],[12,"capacity","","",7,null],[5,"with_capacity","","Construct a ring buffer with a given capacity, and return …",null,[[["usize",15]]]],[11,"produce_available","","",4,[[],["ringrange",3]]],[11,"consume_available","","",4,[[],["ringrange",3]]],[11,"commit_produced","","",4,[[["usize",15]]]],[11,"commit_consumed","","",4,[[["usize",15]]]],[11,"push","","Tries to push the contents of the given slice into the …",5,[[],[["usize",15],["result",4]]]],[11,"pop_full","","Tries to fill the entirety of the given <code>data</code> slice. If …",6,[[],[["usize",15],["result",4]]]],[11,"discard_all","","Discard all currently available data.",6,[[]]],[11,"from","tiralabra::correlation_match","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","tiralabra::cross_correlation","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","tiralabra::fft","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","tiralabra::math","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tiralabra::ring_buffer","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","tiralabra::math","",3,[[],["complex",3]]],[11,"next","tiralabra::ring_buffer","",7,[[],[["usize",15],["option",4]]]],[11,"size_hint","","",7,[[]]],[11,"clone","tiralabra::math","",3,[[],["complex",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"div","","",3,[[["num",6]]]],[11,"div","","",3,[[]]],[11,"sub","","",3,[[]]],[11,"add","","",3,[[]]],[11,"mul","","",3,[[["num",6]]]],[11,"mul","","",3,[[]]],[11,"neg","","",3,[[]]]],"p":[[3,"CorrelationMatch"],[3,"CrossCorrelation"],[3,"Prepared"],[3,"Complex"],[3,"RingBuffer"],[3,"Producer"],[3,"Consumer"],[3,"RingRange"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);